>From @twg.com:oldera@twg.com Fri Apr 13 11:38:21 1990
Received: from TWG.COM by salt.acc.com (5.61/1.34)
	id AA09323; Fri, 13 Apr 90 11:37:50 -0700
Received: from TWG.COM by twg.com with SMTP ; Fri, 13 Apr 90 11:12:44 PST
Received: from vax1.twg.com by Obelix.TWG.COM id aa02398; 13 Apr 90 11:12 PDT
Date: 13 Apr 90 10:54:00 PST
From: "Alcoff, Edward R." <oldera@TWG.COM>
Subject: 2nd attempt- Wollongong MIB
To: chris <chris@salt.acc.com>
Message-Id:  <9004131112.aa02398@Obelix.TWG.COM>
Status: R


OBJECT IDENTIFIER ASSIGNMENTS FOR
NETWORK MANAGEMENT OF WOLLONGONG TCP/IP PRODUCTS



The Internet-standard MIB for network management of TCP/IP-based networks is defined in RFCs 1065 & 1066.  Within the SMI enterprises subtree, the Internet Assigned Numbers Authority has assigned to Wollongong the subtree:

	wollongong OBJECT IDENTIFIER ::=
	{  iso (1) org(3)  dod(6)  internet(1)  private(4)  enterprises(1)  6  }


This subtree is assigned for Wollongong, not only to define its own managed objects, but also to assign unique identifiers for its products.  This latter is required by the object "sysObjectId" which is defined in the RFC-1066 as:

The vendor's authoritative identification of the network management subsystem contained in the entity.  This value is allocated within the SMI enterprises subtree (1.3.6.1.4.1) and provides an easy and unambiguous means for determining "what kind of box
 is being managed.


This document makes the following assignments within the Wollongong subtree:

model			OBJECT IDENTIFIER ::=			{  wollongong  1}
vms4			OBJECT IDENTIFIER ::=			{  model 1  }
vms5			OBJECT IDENTIFIER ::=			{  model 2  }
sun3			OBJECT IDENTIFIER ::=			{  model 3  }
sysV386		OBJECT IDENTIFIER ::=			{  model 4  }
att3B2			OBJECT IDENTIFIER ::=			{  model 5  }
ncr			OBJECT IDENTIFIER ::=			{  model 6  }
dos			OBJECT IDENTIFIER ::=			{  model 7  }
dostcp			OBJECT IDENTIFIER ::=			{  dos 1  }
dosroute		OBJECT IDENTIFIER ::=			{  dos 2  }
dosruntime		OBJECT IDENTIFIER ::=			{  dos 3  }
os2			OBJECT IDENTIFIER ::=			{  model 8  }
mac			OBJECT IDENTIFIER ::=			{  model 9  }
proxy			OBJECT IDENTIFIER ::=			{  wollongong 2  }
LANbridgeTab		SEQUENCE OF LANbridgeEnt ::= 		{  proxy 1  } 	
	


Further assignments and the definition of LANbridgeEnt are given in Attachment I.  Access via SNMP to the LANbridgeTab is discussed in Attachment II.

Other assignments will be made, as when required.



					ATTACHMENT I

Definitions in the Wollongong Tree for the LANbridge Group



OBJECT:
	LANbridgeTab  {  proxy 1  }

Syntax:
	SEQUENCE of LANbridgeEnt

Definition:
	A list of LAN bridge entries.

Access:
	read-write.

Status:
	optional.


OBJECT:
	LANbridgeEnt  {  LANbridgeTab 1  }

Syntax:
	LANbridgeEnt  ::=  SEQUENCE  {
		twgLBUpTime
			TimeTicks,
		twgLBNeigh1
			OCTET STRING,
		twgLBNeigh2
			OCTET STRING,
		twgLBInFrames1
			Counter,
		twgLBInFrames2
			Counter,
		twgLBOutFrames1
			Counter
		twgLBOutFrames2
			Counter,
		twgLBBadFrames1
			Counter,
		twgLBBadFrames2
			Counter,
		twgLBCollisions
			Counter,
		twgLBInOwnFrames1
			Counter,
		twgLBInOwnFrames2	
			Counter,
		twgLBOutOwnFrames1
			Counter,
		twgLBOutOwnFrames2
			Counter,
		twgLBReboot
			INTEGER,
		twgLBStatus
			INTEGER,
		twgLBState1
			INTEGER,
		twgLBState2
			INTEGER,
		twgLBAddr1
			OCTET STRING,
     }

Definition:
 A LAN Bridge entry containing objects related to events on bridges.   Each bridge is assumed to have exactly two interfaces.  One of these is called "line 1"; the other "line 2".

Access:
	read-write.

Status:
	optional.


OBJECT:
	twgLBUpTime  {  LANbridgeEnt 1  }

Syntax:
	TimeTicks

Definition:
	The time (in hundreths of a seconds) since the bridge was last booted.

Access:
	read-only.

Status:
	optional.


OBJECT:
	twgLBNeigh1  {  LANbridgeEnt 2  }

Syntax:
	OCTET STRING

Definition:
	The address of the neighboring bridge on line 1.

Access:
	read-only.

Status:
	optional.


OBJECT:
	twgLBNeigh2  {  LANbridgeEnt 3  }

Syntax:
	OCTET STRING

Definition:
	The address of the neighboring bridge on line 2.

Access:
	read-only.

Status:
	optional.


OBJECT:
	twgLBInFrames1  {  LANbridgeEnt  4  }	

Syntax:
	Counter.

Definition:
	A count of all frames received by a bridge on line one.

Access:
	read-only.

Status:	
	optional.


OBJECT:
	twgLBInFrames2  {  LANbridgeEnt  5  }	

Syntax:
	Counter.

Definition:
	A count of all frames received by a bridge on line two.

Access:
	read-only.

Status:	
	optional.



OBJECT:
	twgLBOutFrames1  {  LANbridgeEnt  6  }

Syntax:
	Counter.

Definition:
	A count of all frames transmitted by a bridge on line one.

Access:
	read-only.

Status:	
	optional.


OBJECT:
	twgLBBadFrames1  {  LANbridgeEnt  8  }	

Syntax:
	Counter.

Definition:
	A count of all bad frames received by a bridge on line one.

Access:
	read-only.

Status:	
	optional.


OBJECT:
	twgLBBadFrames2  {  LANbridgeEnt  9  }

Syntax:
	Counter.

Definition:
	A count of all bad frames received by a bridge on line two.

Access:
	read-only.

Status:	
	optional.


OBJECT:
	twgLBCollisions  {  LANbridgeEnt  10  }

Syntax:
	Counter.

Definition:
	A count of detected collision errors by a bridge when it tried to transmit a frame.

Access:
	read-only.

Status:	
	optional.


OBJECT:
	twgLBInOwnFrames1  {  LANbridgeEnt  11  }

Syntax:
	Counter.

Definition:
	A count of all packets received by a bridge on line one where the destination
	address is the bridge itself.

Access:
	read-only.

Status:	
	optional.



OBJECT:
	twgLBInOwnFrames2  {  LANbridgeEnt  12  }	

Syntax:
	Counter.

Definition:
	A count of all packets received by a bridge on line two where the destination
	address is the bridge itself.

Access:
	read-only.

Status:	
	optional.



OBJECT:
	twgLBOutOwnFrames1  {  LANbridgeEnt  13  }

Syntax:
	Counter.

Definition:
	A count of all packets originated by a bridge which were transmitted over
	line one.

Access:
	read-only.

Status:	
	optional.


OBJECT:
	twgLBOutOwnFrames2  {  LANbridgeEnt  14  }

Syntax:
	Counter.

Definition:
	A count of all packets originated by a bridge which were transmitted over
	line two.

Access:
	read-only.

Status:	
	optional.


OBJECT:
	twgLBReboot  {  LANbridgeEnt  15  }

Syntax:
	INTEGER  {	
	   noboot  (0),				-- returned on a read.
	   boot (1),				-- required value to reboot.
	}		

Definition:
	Reboot a bridge.

Access:
	read-write.


Status:	
	optional.


OBJECT:
	twgLBStatus  {  LANbridgeEnt  16  }

Syntax:
	INTEGER  {
	   up  (1),
	   notresponding  (2)
	}

Definition:
	The status of a bridge.

Access:
	read-only.

Status:	
	optional.


OBJECT:
	twgLBState1  {  LANbridgeEnt  17  }

Syntax:
	INTEGER  {
	   forwarding  (1),
	   blocking  (2),
	   other  (3)
	}

Definition:
	The status of line one of a bridge.

Access:
	read-only.

Status:	
	optional.


OBJECT:
	twgLBState2  {  LANbridgeEnt  18  }

Syntax:
	INTEGER  {
	   forwarding  (1),
	   blocking  (2),
	   other  (3)
	}
	
Definition:
	The status of line two of a bridge.

Access:
	read-only.

Status:	
	optional.


OBJECT:
	twgLBAddr1  {  LANbridgeEnt  19  }

Syntax:
	OCTET STRING

Definition:
	The 6-octet-long Ethernet address of both the bridge's line-1 interface and the
	line-2 interface.

Access:
	read-only.

Status:	
	optional.



ATTACHMENT II


Table Access Within the Wollongong Tree When Using SNMP


RFC 1065 and 1066 leave the identification of the object instance as a protocol specific issue.  RFC 1067 defines how instances of object types within tables in the mib subtree are accessed via SNMP.  The following defines how the tables within the Woll
ngong subtree are accessed via SNMP.


LANbridgeTab Object Type Names

The name of a LAN bridge element, x, is the OBJECT IDENTIFIER of the form a.b.c.d.e.f such that a.b.c.d.e.f is the value of that instance of the twgLBAddr object type associated with x.

For each object type, t, for which the defined name, n, has a prefix of LANbridgeEnt, an instance, 1, of t is named by an OBJECT IDENTIFIER of the form n.y, where y is the name of the LAN bridge element about which 1 represents information.

For example, suppose one wanted to find the length of time since the last restart of the LAN bridge entry associated with Ethernet address 01:02:03:04:05:06.  Accordingly, twgLBUpTime.1.2.3.4.5.6 would identify the desired instance.
